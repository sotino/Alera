/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package be.sotino.view;

import be.sotino.entity.construction.Exploitant;
import be.sotino.entity.Player;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;

/**
 *
 * @author Simon
 */
public class PlayerView extends javax.swing.JFrame {

    private Player player;
    private JFrame frame;
    private CommandementCenter commandementCenter;
    private static HashMap<JButton, Exploitant> exploitants = new HashMap<JButton, Exploitant>();
    private static Component currDetail;
    private long lastRefresh;

    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
        setTitle("Alera");
        setVisible(true);
        lastRefresh = System.currentTimeMillis();
    }

    public PlayerView(Player player) {
        this();
        this.player = player;
        ressource1.setPlayerRessource(this.player.getRessource());
        notifyChange();
    }

    public void notifyChange() {
        long now = System.currentTimeMillis();
        long delta = now - lastRefresh;
        lastRefresh = now;
        for (Exploitant e : player.getExploitants()) {
            e.refreshFromDelta(delta);
            if (!exploitants.containsValue(e)){
                JButton button = new JButton();
                exploitants.put(button,e);
                button.setIcon(new ImageIcon(getClass().getResource("/images/ferme.jpg")));
                button.addActionListener(new ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        Exploitation exploitation  = new Exploitation();
                        exploitation.setExploitant(exploitants.get(evt.getSource()));
                        detailPanel.removeAll();
                        detailPanel.add(exploitation);
                        currDetail = exploitation;
                        pack();
                    }
                });
                vuePanel.add(button);
                pack();
            }
        }
        if(currDetail != null){
            if(currDetail instanceof Exploitation){
                ((Exploitation)currDetail).notifieChange();
            }else if(currDetail instanceof CommandementCenter){
                ((CommandementCenter)currDetail).notifieChange();
            }
        }
        ressource1.notifieChange();
        if (frame != null && frame.isVisible()) {
            commandementCenter.notifieChange();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ressource1 = new be.sotino.view.Ressource();
        jScrollPane1 = new javax.swing.JScrollPane();
        vuePanel = new javax.swing.JPanel();
        commandementButon = new javax.swing.JButton();
        detailPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(ressource1, java.awt.BorderLayout.PAGE_START);

        vuePanel.setLayout(new javax.swing.BoxLayout(vuePanel, javax.swing.BoxLayout.LINE_AXIS));

        commandementButon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alphacastle2.png"))); // NOI18N
        commandementButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandementButonActionPerformed(evt);
            }
        });
        vuePanel.add(commandementButon);

        jScrollPane1.setViewportView(vuePanel);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout detailPanelLayout = new javax.swing.GroupLayout(detailPanel);
        detailPanel.setLayout(detailPanelLayout);
        detailPanelLayout.setHorizontalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 835, Short.MAX_VALUE)
        );
        detailPanelLayout.setVerticalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(detailPanel, java.awt.BorderLayout.SOUTH);

        jMenu1.setText("Achat");

        jMenuItem1.setText("Centre de commandement");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        frame = new JFrame("Visulalisation du centre de commandement");
        commandementCenter = new CommandementCenter();
        commandementCenter.setPlayer(player);
        frame.add(commandementCenter);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void commandementButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandementButonActionPerformed
        commandementCenter = new CommandementCenter();
        commandementCenter.setPlayer(player);
        detailPanel.removeAll();
        detailPanel.setLayout(new FlowLayout());
        detailPanel.add(commandementCenter);
        currDetail= commandementCenter;
        pack();
    }//GEN-LAST:event_commandementButonActionPerformed
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        Player me = new Player();
//        PlayerView fr = new PlayerView(me);
//        moteur m = new moteur(fr);
//        
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton commandementButon;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private be.sotino.view.Ressource ressource1;
    private javax.swing.JPanel vuePanel;
    // End of variables declaration//GEN-END:variables
}
